// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

// generator client {
//   provider = "prisma-client-js"
//   output   = "../generated/prisma"
// }

// datasource db {
//   provider = "postgresql"
//   url      = env("DATABASE_URL")
// }

// schema.prisma
generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql" // or "mysql" / "sqlite"
  url      = env("DATABASE_URL")
}

model AvaliableTriger {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  key       String
  imageUrl  String
  metadata  Json     @default("{}")
  createdAt DateTime
  updatedAt DateTime @default(now())
}

model AvliableAction {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  key       String
  imageUrl  String
  metadata  Json     @default("{}")
  createdAt DateTime
  updatedAt DateTime @default(now())
}

model StapsRun {
  id         Int      @id @default(autoincrement())
  WorkFlowId Int
  workFlow   WorkFlow @relation(fields: [WorkFlowId], references: [id])
  metaData   Json     @default("{}")
  createdAt  DateTime
  updatedAt  DateTime @default(now())

  outBoxStapRun OutBoxStapsRun[]
}

model User {
  id        Int       @id @default(autoincrement())
  name      String
  email     String    @unique
  password  String
  createdAt DateTime
  updatedAt DateTime? @default(now())

  zaps      Staps[] //webhook
  workFlows WorkFlow[]
}

model OutBoxStapsRun {
  id        Int      @id @default(autoincrement())
  StapsRunId Int
  stapsRun  StapsRun @relation(fields: [StapsRunId], references: [id])

  createdAt DateTime 
  updatedAt DateTime @default(now())
}

model WorkFlow {
  id       Int        @id @default(autoincrement())
  name     String     @unique
  createAt DateTime
  updateAt DateTime   @default(now())
  userId   Int
  User     User       @relation(fields: [userId], references: [id])
  Staps    Staps[]
  stapsRuns  StapsRun[]
}

model Staps {
  id       Int    @id @default(autoincrement())
  name     String
  userId   Int?
  index    Int
  type     Type
  app      String
  metadata Json   @default("{}")
  user     User?  @relation(fields: [userId], references: [id])

  createdAt  DateTime
  updatedAt  DateTime @default(now())
  workflowId Int
  WorksFlows WorkFlow @relation(fields: [workflowId], references: [id])

 

  StapCondiction StapCondiction[]
}

enum Type {
  TRIGGER
  ACTION
}

model StapCondiction {
  id        Int    @id @default(autoincrement())
  key       String
  operation String
  value     String
  stepsId   Int
  staps     Staps  @relation(fields: [stepsId], references: [id])
}
